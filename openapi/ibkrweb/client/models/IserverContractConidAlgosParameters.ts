// @ts-nocheck
/* eslint-disable */
/**
 * Client Portal Web API
 * Client Poral Web API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
/**
 *
 * @export
 * @interface IserverContractConidAlgosParameters
 */
export interface IserverContractConidAlgosParameters {
  /**
   * The algo parameter
   * @type {string}
   * @memberof IserverContractConidAlgosParameters
   */
  id: string;
  /**
   * If true a value must be entered.
   * @type {boolean}
   * @memberof IserverContractConidAlgosParameters
   */
  required?: boolean;
  /**
   * Descriptive name of the parameter.
   * @type {string}
   * @memberof IserverContractConidAlgosParameters
   */
  name?: string;
  /**
   * Format of the parameter.
   * @type {string}
   * @memberof IserverContractConidAlgosParameters
   */
  valueClassName: IserverContractConidAlgosParametersValueClassNameEnum;
  /**
   * Smallest value, only applies to parameters with valueClassName=Double.
   * @type {number}
   * @memberof IserverContractConidAlgosParameters
   */
  minValue?: number;
  /**
   * Largest value, only applies to parameters with valueClassName=Double.
   * @type {number}
   * @memberof IserverContractConidAlgosParameters
   */
  maxValue?: number;
  /**
   * User configured preset for this parameter.
   * @type {boolean}
   * @memberof IserverContractConidAlgosParameters
   */
  defaultValue?: boolean;
  /**
   * The list of choices
   * @type {string}
   * @memberof IserverContractConidAlgosParameters
   */
  legalStrings?: string;
  /**
   * Detailed description of the parameter.
   * @type {string}
   * @memberof IserverContractConidAlgosParameters
   */
  description?: string;
  /**
   * The order in UI, used when building dynamic UI so that more important parameters are presented first.
   * @type {number}
   * @memberof IserverContractConidAlgosParameters
   */
  guiRank?: number;
  /**
   * If true, must specify parameter using market rule format. Only applies to parameters with valueClassName=Double.
   * @type {boolean}
   * @memberof IserverContractConidAlgosParameters
   */
  priceMarketRule?: boolean;
  /**
   * The rules that UI should apply to algo parameters depending on chosen order type:
   *  * MKT:speedUp:=:no - hide SpeedUp param when MKT is chosen for order type.
   *  * LMT:strategyType:<>:empty - strategyType param cannot be empty when LMT is chosen for order type.
   *  * MKT:strategyType:=:Marketable - set strategyType param to Marketable and disable (no other choice) when MKT is chosen for order type.
   * @type {string}
   * @memberof IserverContractConidAlgosParameters
   */
  enabledConditions?: IserverContractConidAlgosParametersEnabledConditionsEnum;
}

/**
 * @export
 * @enum {string}
 */
export enum IserverContractConidAlgosParametersValueClassNameEnum {
  Double = "double",
  String = "string",
  Time = "time",
  Boolean = "boolean",
}
/**
 * @export
 * @enum {string}
 */
export enum IserverContractConidAlgosParametersEnabledConditionsEnum {
  MkTspeedUpno = "MKT:speedUp:=:no",
  LmTstrategyTypeempty = "LMT:strategyType:<>:empty",
  MkTstrategyTypeMarketable = "MKT:strategyType:=:Marketable",
}

export function IserverContractConidAlgosParametersFromJSON(
  json: any
): IserverContractConidAlgosParameters {
  return IserverContractConidAlgosParametersFromJSONTyped(json, false);
}

export function IserverContractConidAlgosParametersFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): IserverContractConidAlgosParameters {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    id: json["id"],
    required: !exists(json, "required") ? undefined : json["required"],
    name: !exists(json, "name") ? undefined : json["name"],
    valueClassName: json["valueClassName"],
    minValue: !exists(json, "minValue") ? undefined : json["minValue"],
    maxValue: !exists(json, "maxValue") ? undefined : json["maxValue"],
    defaultValue: !exists(json, "defaultValue")
      ? undefined
      : json["defaultValue"],
    legalStrings: !exists(json, "legalStrings")
      ? undefined
      : json["legalStrings"],
    description: !exists(json, "description") ? undefined : json["description"],
    guiRank: !exists(json, "guiRank") ? undefined : json["guiRank"],
    priceMarketRule: !exists(json, "priceMarketRule")
      ? undefined
      : json["priceMarketRule"],
    enabledConditions: !exists(json, "enabledConditions")
      ? undefined
      : json["enabledConditions"],
  };
}

export function IserverContractConidAlgosParametersToJSON(
  value?: IserverContractConidAlgosParameters | null
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    id: value.id,
    required: value.required,
    name: value.name,
    valueClassName: value.valueClassName,
    minValue: value.minValue,
    maxValue: value.maxValue,
    defaultValue: value.defaultValue,
    legalStrings: value.legalStrings,
    description: value.description,
    guiRank: value.guiRank,
    priceMarketRule: value.priceMarketRule,
    enabledConditions: value.enabledConditions,
  };
}
