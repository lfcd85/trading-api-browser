// @ts-nocheck
/* eslint-disable */
/**
 * Client Portal Web API
 * Client Poral Web API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import {
  ScannerResultContracts,
  ScannerResultContractsFromJSON,
  ScannerResultContractsFromJSONTyped,
  ScannerResultContractsToJSON,
} from "./";

/**
 *
 * @export
 * @interface ScannerResult
 */
export interface ScannerResult {
  /**
   *
   * @type {number}
   * @memberof ScannerResult
   */
  total?: number;
  /**
   *
   * @type {number}
   * @memberof ScannerResult
   */
  size?: number;
  /**
   *
   * @type {number}
   * @memberof ScannerResult
   */
  offset?: number;
  /**
   *
   * @type {string}
   * @memberof ScannerResult
   */
  scanTime?: string;
  /**
   *
   * @type {number}
   * @memberof ScannerResult
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof ScannerResult
   */
  position?: string;
  /**
   *
   * @type {ScannerResultContracts}
   * @memberof ScannerResult
   */
  contracts?: ScannerResultContracts;
}

export function ScannerResultFromJSON(json: any): ScannerResult {
  return ScannerResultFromJSONTyped(json, false);
}

export function ScannerResultFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): ScannerResult {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    total: !exists(json, "total") ? undefined : json["total"],
    size: !exists(json, "size") ? undefined : json["size"],
    offset: !exists(json, "offset") ? undefined : json["offset"],
    scanTime: !exists(json, "scanTime") ? undefined : json["scanTime"],
    id: !exists(json, "id") ? undefined : json["id"],
    position: !exists(json, "position") ? undefined : json["position"],
    contracts: !exists(json, "Contracts")
      ? undefined
      : ScannerResultContractsFromJSON(json["Contracts"]),
  };
}

export function ScannerResultToJSON(value?: ScannerResult | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    total: value.total,
    size: value.size,
    offset: value.offset,
    scanTime: value.scanTime,
    id: value.id,
    position: value.position,
    Contracts: ScannerResultContractsToJSON(value.contracts),
  };
}
