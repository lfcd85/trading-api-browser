/* tslint:disable */
/* eslint-disable */
/**
 * Client Portal Web API
 * Client Poral Web API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
/**
 *
 * @export
 * @interface AlertResponseConditions
 */
export interface AlertResponseConditions {
  /**
   * Types: 1-Price, 3-Time, 4-Margin, 5-Trade, 6-Volume, 7: MTA market 8: MTA Position, 9: MTA Acc. Daily PN&
   * @type {number}
   * @memberof AlertResponseConditions
   */
  conditionType?: number;
  /**
   * conid and exchange. Format supports conid or conid@exchange
   * @type {string}
   * @memberof AlertResponseConditions
   */
  conidex?: string;
  /**
   * Format contract name
   * @type {string}
   * @memberof AlertResponseConditions
   */
  contractDescription1?: string;
  /**
   * optional, operator for the current condition
   *   * >= Greater than or equal to
   *   * <= Less than or equal to
   * @type {string}
   * @memberof AlertResponseConditions
   */
  conditionOperator?: string;
  /**
   * optional, only some type of conditions have triggerMethod
   * @type {string}
   * @memberof AlertResponseConditions
   */
  conditionTriggerMethod?: string;
  /**
   * can not be empty, can pass default value "*"
   * @type {string}
   * @memberof AlertResponseConditions
   */
  conditionValue?: string;
  /**
   * Condition array should end with "n"
   *   * a - AND
   *   * o - OR
   *   * n - END
   * @type {string}
   * @memberof AlertResponseConditions
   */
  conditionLogicBind?: string;
  /**
   * only needed for some MTA alert condition
   * @type {string}
   * @memberof AlertResponseConditions
   */
  conditionTimeZone?: string;
}

export function AlertResponseConditionsFromJSON(
  json: any
): AlertResponseConditions {
  return AlertResponseConditionsFromJSONTyped(json, false);
}

export function AlertResponseConditionsFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): AlertResponseConditions {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    conditionType: !exists(json, "condition_type")
      ? undefined
      : json["condition_type"],
    conidex: !exists(json, "conidex") ? undefined : json["conidex"],
    contractDescription1: !exists(json, "contract_description_1")
      ? undefined
      : json["contract_description_1"],
    conditionOperator: !exists(json, "condition_operator")
      ? undefined
      : json["condition_operator"],
    conditionTriggerMethod: !exists(json, "condition_trigger_method")
      ? undefined
      : json["condition_trigger_method"],
    conditionValue: !exists(json, "condition_value")
      ? undefined
      : json["condition_value"],
    conditionLogicBind: !exists(json, "condition_logic_bind")
      ? undefined
      : json["condition_logic_bind"],
    conditionTimeZone: !exists(json, "condition_time_zone")
      ? undefined
      : json["condition_time_zone"],
  };
}

export function AlertResponseConditionsToJSON(
  value?: AlertResponseConditions | null
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    condition_type: value.conditionType,
    conidex: value.conidex,
    contract_description_1: value.contractDescription1,
    condition_operator: value.conditionOperator,
    condition_trigger_method: value.conditionTriggerMethod,
    condition_value: value.conditionValue,
    condition_logic_bind: value.conditionLogicBind,
    condition_time_zone: value.conditionTimeZone,
  };
}
