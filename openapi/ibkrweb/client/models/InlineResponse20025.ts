// @ts-nocheck
/* eslint-disable */
/**
 * Client Portal Web API
 * Client Poral Web API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime'
import {
  IserverSecdefSearchSections,
  IserverSecdefSearchSectionsFromJSON,
  IserverSecdefSearchSectionsFromJSONTyped,
  IserverSecdefSearchSectionsToJSON,
} from './'

/**
 *
 * @export
 * @interface InlineResponse20025
 */
export interface InlineResponse20025 {
  /**
   * Contract Identifier
   * @type {number}
   * @memberof InlineResponse20025
   */
  conid?: number
  /**
   * Company Name - Exchange
   * @type {string}
   * @memberof InlineResponse20025
   */
  companyHeader?: string
  /**
   *
   * @type {string}
   * @memberof InlineResponse20025
   */
  companyName?: string
  /**
   * Underlying symbol
   * @type {string}
   * @memberof InlineResponse20025
   */
  symbol?: string
  /**
   * Exchange
   * @type {string}
   * @memberof InlineResponse20025
   */
  description?: string
  /**
   *
   * @type {string}
   * @memberof InlineResponse20025
   */
  restricted?: string
  /**
   * List of Future Option expirations in YYYMMDD format separated by semicolon
   * @type {string}
   * @memberof InlineResponse20025
   */
  fop?: string
  /**
   * List of Option expirations in YYYYMMDD format separated by semicolon
   * @type {string}
   * @memberof InlineResponse20025
   */
  opt?: string
  /**
   * List of Warrant expirations in YYYYMMDD format separated by semicolon
   * @type {string}
   * @memberof InlineResponse20025
   */
  war?: string
  /**
   *
   * @type {Array<IserverSecdefSearchSections>}
   * @memberof InlineResponse20025
   */
  sections?: Array<IserverSecdefSearchSections>
}

export function InlineResponse20025FromJSON(json: any): InlineResponse20025 {
  return InlineResponse20025FromJSONTyped(json, false)
}

export function InlineResponse20025FromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): InlineResponse20025 {
  if (json === undefined || json === null) {
    return json
  }
  return {
    conid: !exists(json, 'conid') ? undefined : json['conid'],
    companyHeader: !exists(json, 'companyHeader')
      ? undefined
      : json['companyHeader'],
    companyName: !exists(json, 'companyName') ? undefined : json['companyName'],
    symbol: !exists(json, 'symbol') ? undefined : json['symbol'],
    description: !exists(json, 'description') ? undefined : json['description'],
    restricted: !exists(json, 'restricted') ? undefined : json['restricted'],
    fop: !exists(json, 'fop') ? undefined : json['fop'],
    opt: !exists(json, 'opt') ? undefined : json['opt'],
    war: !exists(json, 'war') ? undefined : json['war'],
    sections: !exists(json, 'sections')
      ? undefined
      : (json['sections'] as Array<any>).map(
          IserverSecdefSearchSectionsFromJSON
        ),
  }
}

export function InlineResponse20025ToJSON(
  value?: InlineResponse20025 | null
): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    conid: value.conid,
    companyHeader: value.companyHeader,
    companyName: value.companyName,
    symbol: value.symbol,
    description: value.description,
    restricted: value.restricted,
    fop: value.fop,
    opt: value.opt,
    war: value.war,
    sections:
      value.sections === undefined
        ? undefined
        : (value.sections as Array<any>).map(IserverSecdefSearchSectionsToJSON),
  }
}
