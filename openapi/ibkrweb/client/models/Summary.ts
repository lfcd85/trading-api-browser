/* tslint:disable */
/* eslint-disable */
/**
 * Client Portal Web API
 * Client Poral Web API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import {
  SummaryAccountSummaries,
  SummaryAccountSummariesFromJSON,
  SummaryAccountSummariesFromJSONTyped,
  SummaryAccountSummariesToJSON,
  SummaryBalanceByDate,
  SummaryBalanceByDateFromJSON,
  SummaryBalanceByDateFromJSONTyped,
  SummaryBalanceByDateToJSON,
  SummaryExcludedAccounts,
  SummaryExcludedAccountsFromJSON,
  SummaryExcludedAccountsFromJSONTyped,
  SummaryExcludedAccountsToJSON,
  SummaryTotal,
  SummaryTotalFromJSON,
  SummaryTotalFromJSONTyped,
  SummaryTotalToJSON,
} from "./";

/**
 * account information
 * @export
 * @interface Summary
 */
export interface Summary {
  /**
   *
   * @type {SummaryTotal}
   * @memberof Summary
   */
  total?: SummaryTotal;
  /**
   * date format-- yyyy-MM-dd
   * @type {string}
   * @memberof Summary
   */
  startDate?: string;
  /**
   *
   * @type {Array<SummaryExcludedAccounts>}
   * @memberof Summary
   */
  excludedAccounts?: Array<SummaryExcludedAccounts>;
  /**
   *
   * @type {string}
   * @memberof Summary
   */
  lastSuccessfulUpdate?: string;
  /**
   *
   * @type {Array<SummaryAccountSummaries>}
   * @memberof Summary
   */
  accountSummaries?: Array<SummaryAccountSummaries>;
  /**
   *
   * @type {string}
   * @memberof Summary
   */
  endDate?: string;
  /**
   * indicator of user having configured any external accounts
   * @type {boolean}
   * @memberof Summary
   */
  hasExternalAccounts?: boolean;
  /**
   *
   * @type {number}
   * @memberof Summary
   */
  rc?: number;
  /**
   *
   * @type {string}
   * @memberof Summary
   */
  currency?: string;
  /**
   *
   * @type {string}
   * @memberof Summary
   */
  userId?: string;
  /**
   *
   * @type {string}
   * @memberof Summary
   */
  pm?: string;
  /**
   *
   * @type {string}
   * @memberof Summary
   */
  view?: string;
  /**
   *
   * @type {SummaryBalanceByDate}
   * @memberof Summary
   */
  balanceByDate?: SummaryBalanceByDate;
}

export function SummaryFromJSON(json: any): Summary {
  return SummaryFromJSONTyped(json, false);
}

export function SummaryFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): Summary {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    total: !exists(json, "total")
      ? undefined
      : SummaryTotalFromJSON(json["total"]),
    startDate: !exists(json, "startDate") ? undefined : json["startDate"],
    excludedAccounts: !exists(json, "excludedAccounts")
      ? undefined
      : (json["excludedAccounts"] as Array<any>).map(
          SummaryExcludedAccountsFromJSON
        ),
    lastSuccessfulUpdate: !exists(json, "lastSuccessfulUpdate")
      ? undefined
      : json["lastSuccessfulUpdate"],
    accountSummaries: !exists(json, "accountSummaries")
      ? undefined
      : (json["accountSummaries"] as Array<any>).map(
          SummaryAccountSummariesFromJSON
        ),
    endDate: !exists(json, "endDate") ? undefined : json["endDate"],
    hasExternalAccounts: !exists(json, "hasExternalAccounts")
      ? undefined
      : json["hasExternalAccounts"],
    rc: !exists(json, "rc") ? undefined : json["rc"],
    currency: !exists(json, "currency") ? undefined : json["currency"],
    userId: !exists(json, "userId") ? undefined : json["userId"],
    pm: !exists(json, "pm") ? undefined : json["pm"],
    view: !exists(json, "view") ? undefined : json["view"],
    balanceByDate: !exists(json, "balanceByDate")
      ? undefined
      : SummaryBalanceByDateFromJSON(json["balanceByDate"]),
  };
}

export function SummaryToJSON(value?: Summary | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    total: SummaryTotalToJSON(value.total),
    startDate: value.startDate,
    excludedAccounts:
      value.excludedAccounts === undefined
        ? undefined
        : (value.excludedAccounts as Array<any>).map(
            SummaryExcludedAccountsToJSON
          ),
    lastSuccessfulUpdate: value.lastSuccessfulUpdate,
    accountSummaries:
      value.accountSummaries === undefined
        ? undefined
        : (value.accountSummaries as Array<any>).map(
            SummaryAccountSummariesToJSON
          ),
    endDate: value.endDate,
    hasExternalAccounts: value.hasExternalAccounts,
    rc: value.rc,
    currency: value.currency,
    userId: value.userId,
    pm: value.pm,
    view: value.view,
    balanceByDate: SummaryBalanceByDateToJSON(value.balanceByDate),
  };
}
