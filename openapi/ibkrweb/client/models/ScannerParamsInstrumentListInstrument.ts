// @ts-nocheck
/* eslint-disable */
/**
 * Client Portal Web API
 * Client Poral Web API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime'
/**
 *
 * @export
 * @interface ScannerParamsInstrumentListInstrument
 */
export interface ScannerParamsInstrumentListInstrument {
  /**
   * Type of the asset
   * @type {string}
   * @memberof ScannerParamsInstrumentListInstrument
   */
  type?: string
  /**
   * Display name for the instrument
   * @type {string}
   * @memberof ScannerParamsInstrumentListInstrument
   */
  name?: string
  /**
   *
   * @type {string}
   * @memberof ScannerParamsInstrumentListInstrument
   */
  shortName?: string
  /**
   * Sec Type of the instrument. This field is not provided if its value is same as 'type'
   * @type {string}
   * @memberof ScannerParamsInstrumentListInstrument
   */
  secType?: string
  /**
   * Supported filters for the instrument separated by a comma
   * @type {string}
   * @memberof ScannerParamsInstrumentListInstrument
   */
  filters?: string
}

export function ScannerParamsInstrumentListInstrumentFromJSON(
  json: any
): ScannerParamsInstrumentListInstrument {
  return ScannerParamsInstrumentListInstrumentFromJSONTyped(json, false)
}

export function ScannerParamsInstrumentListInstrumentFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): ScannerParamsInstrumentListInstrument {
  if (json === undefined || json === null) {
    return json
  }
  return {
    type: !exists(json, 'type') ? undefined : json['type'],
    name: !exists(json, 'name') ? undefined : json['name'],
    shortName: !exists(json, 'shortName') ? undefined : json['shortName'],
    secType: !exists(json, 'secType') ? undefined : json['secType'],
    filters: !exists(json, 'filters') ? undefined : json['filters'],
  }
}

export function ScannerParamsInstrumentListInstrumentToJSON(
  value?: ScannerParamsInstrumentListInstrument | null
): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    type: value.type,
    name: value.name,
    shortName: value.shortName,
    secType: value.secType,
    filters: value.filters,
  }
}
