// @ts-nocheck
/* eslint-disable */
/**
 * Client Portal Web API
 * Client Poral Web API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
/**
 *
 * @export
 * @interface IbcustEntityInfoAddress
 */
export interface IbcustEntityInfoAddress {
  /**
   *
   * @type {string}
   * @memberof IbcustEntityInfoAddress
   */
  street?: string;
  /**
   *
   * @type {string}
   * @memberof IbcustEntityInfoAddress
   */
  street2?: string;
  /**
   *
   * @type {string}
   * @memberof IbcustEntityInfoAddress
   */
  city?: string;
  /**
   *
   * @type {string}
   * @memberof IbcustEntityInfoAddress
   */
  state?: string;
  /**
   *
   * @type {string}
   * @memberof IbcustEntityInfoAddress
   */
  postalCode?: string;
  /**
   *
   * @type {string}
   * @memberof IbcustEntityInfoAddress
   */
  country?: string;
  /**
   *
   * @type {string}
   * @memberof IbcustEntityInfoAddress
   */
  countryCode?: string;
  /**
   *
   * @type {string}
   * @memberof IbcustEntityInfoAddress
   */
  compact?: string;
}

export function IbcustEntityInfoAddressFromJSON(
  json: any
): IbcustEntityInfoAddress {
  return IbcustEntityInfoAddressFromJSONTyped(json, false);
}

export function IbcustEntityInfoAddressFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): IbcustEntityInfoAddress {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    street: !exists(json, "street") ? undefined : json["street"],
    street2: !exists(json, "street2") ? undefined : json["street2"],
    city: !exists(json, "city") ? undefined : json["city"],
    state: !exists(json, "state") ? undefined : json["state"],
    postalCode: !exists(json, "postalCode") ? undefined : json["postalCode"],
    country: !exists(json, "country") ? undefined : json["country"],
    countryCode: !exists(json, "countryCode") ? undefined : json["countryCode"],
    compact: !exists(json, "compact") ? undefined : json["compact"],
  };
}

export function IbcustEntityInfoAddressToJSON(
  value?: IbcustEntityInfoAddress | null
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    street: value.street,
    street2: value.street2,
    city: value.city,
    state: value.state,
    postalCode: value.postalCode,
    country: value.country,
    countryCode: value.countryCode,
    compact: value.compact,
  };
}
