// @ts-nocheck
/* eslint-disable */
/**
 * Client Portal Web API
 * Client Poral Web API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime'
/**
 *
 * @export
 * @interface ScannerParamsLocationTreeLocation
 */
export interface ScannerParamsLocationTreeLocation {
  /**
   *
   * @type {string}
   * @memberof ScannerParamsLocationTreeLocation
   */
  instruments?: string
  /**
   *
   * @type {string}
   * @memberof ScannerParamsLocationTreeLocation
   */
  displayName?: string
  /**
   *
   * @type {string}
   * @memberof ScannerParamsLocationTreeLocation
   */
  locationCode?: string
  /**
   *
   * @type {string}
   * @memberof ScannerParamsLocationTreeLocation
   */
  routeExchange?: string
}

export function ScannerParamsLocationTreeLocationFromJSON(
  json: any
): ScannerParamsLocationTreeLocation {
  return ScannerParamsLocationTreeLocationFromJSONTyped(json, false)
}

export function ScannerParamsLocationTreeLocationFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): ScannerParamsLocationTreeLocation {
  if (json === undefined || json === null) {
    return json
  }
  return {
    instruments: !exists(json, 'instruments') ? undefined : json['instruments'],
    displayName: !exists(json, 'displayName') ? undefined : json['displayName'],
    locationCode: !exists(json, 'locationCode')
      ? undefined
      : json['locationCode'],
    routeExchange: !exists(json, 'routeExchange')
      ? undefined
      : json['routeExchange'],
  }
}

export function ScannerParamsLocationTreeLocationToJSON(
  value?: ScannerParamsLocationTreeLocation | null
): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    instruments: value.instruments,
    displayName: value.displayName,
    locationCode: value.locationCode,
    routeExchange: value.routeExchange,
  }
}
