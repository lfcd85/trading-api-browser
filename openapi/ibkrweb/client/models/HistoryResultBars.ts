// @ts-nocheck
/* eslint-disable */
/**
 * Client Portal Web API
 * Client Poral Web API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
/**
 *
 * @export
 * @interface HistoryResultBars
 */
export interface HistoryResultBars {
  /**
   *
   * @type {number}
   * @memberof HistoryResultBars
   */
  open?: number;
  /**
   *
   * @type {number}
   * @memberof HistoryResultBars
   */
  high?: number;
  /**
   *
   * @type {number}
   * @memberof HistoryResultBars
   */
  low?: number;
  /**
   *
   * @type {number}
   * @memberof HistoryResultBars
   */
  close?: number;
  /**
   *
   * @type {number}
   * @memberof HistoryResultBars
   */
  volume?: number;
  /**
   *
   * @type {string}
   * @memberof HistoryResultBars
   */
  time?: string;
  /**
   *
   * @type {string}
   * @memberof HistoryResultBars
   */
  endTime?: string;
  /**
   *
   * @type {number}
   * @memberof HistoryResultBars
   */
  weightedAvg?: number;
  /**
   *
   * @type {number}
   * @memberof HistoryResultBars
   */
  count?: number;
}

export function HistoryResultBarsFromJSON(json: any): HistoryResultBars {
  return HistoryResultBarsFromJSONTyped(json, false);
}

export function HistoryResultBarsFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): HistoryResultBars {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    open: !exists(json, "open") ? undefined : json["open"],
    high: !exists(json, "high") ? undefined : json["high"],
    low: !exists(json, "low") ? undefined : json["low"],
    close: !exists(json, "close") ? undefined : json["close"],
    volume: !exists(json, "volume") ? undefined : json["volume"],
    time: !exists(json, "time") ? undefined : json["time"],
    endTime: !exists(json, "endTime") ? undefined : json["endTime"],
    weightedAvg: !exists(json, "weightedAvg") ? undefined : json["weightedAvg"],
    count: !exists(json, "count") ? undefined : json["count"],
  };
}

export function HistoryResultBarsToJSON(value?: HistoryResultBars | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    open: value.open,
    high: value.high,
    low: value.low,
    close: value.close,
    volume: value.volume,
    time: value.time,
    endTime: value.endTime,
    weightedAvg: value.weightedAvg,
    count: value.count,
  };
}
