/* tslint:disable */
/* eslint-disable */
/**
 * Client Portal Web API
 * Client Poral Web API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
/**
 *
 * @export
 * @interface Ledger
 */
export interface Ledger {
  /**
   *
   * @type {number}
   * @memberof Ledger
   */
  commoditymarketvalue?: number;
  /**
   *
   * @type {number}
   * @memberof Ledger
   */
  futuremarketvalue?: number;
  /**
   *
   * @type {number}
   * @memberof Ledger
   */
  settledcash?: number;
  /**
   *
   * @type {number}
   * @memberof Ledger
   */
  exchangerate?: number;
  /**
   *
   * @type {number}
   * @memberof Ledger
   */
  sessionid?: number;
  /**
   *
   * @type {number}
   * @memberof Ledger
   */
  cashbalance?: number;
  /**
   *
   * @type {number}
   * @memberof Ledger
   */
  corporatebondsmarketvalue?: number;
  /**
   *
   * @type {number}
   * @memberof Ledger
   */
  warrantsmarketvalue?: number;
  /**
   *
   * @type {number}
   * @memberof Ledger
   */
  netliquidationvalue?: number;
  /**
   *
   * @type {number}
   * @memberof Ledger
   */
  interest?: number;
  /**
   *
   * @type {number}
   * @memberof Ledger
   */
  unrealizedpnl?: number;
  /**
   *
   * @type {number}
   * @memberof Ledger
   */
  stockmarketvalue?: number;
  /**
   *
   * @type {number}
   * @memberof Ledger
   */
  moneyfunds?: number;
  /**
   *
   * @type {string}
   * @memberof Ledger
   */
  currency?: string;
  /**
   *
   * @type {number}
   * @memberof Ledger
   */
  realizedpnl?: number;
  /**
   *
   * @type {number}
   * @memberof Ledger
   */
  funds?: number;
  /**
   *
   * @type {string}
   * @memberof Ledger
   */
  acctcode?: string;
  /**
   *
   * @type {number}
   * @memberof Ledger
   */
  issueroptionsmarketvalue?: number;
  /**
   *
   * @type {string}
   * @memberof Ledger
   */
  key?: string;
  /**
   *
   * @type {number}
   * @memberof Ledger
   */
  timestamp?: number;
  /**
   *
   * @type {number}
   * @memberof Ledger
   */
  severity?: number;
}

export function LedgerFromJSON(json: any): Ledger {
  return LedgerFromJSONTyped(json, false);
}

export function LedgerFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): Ledger {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    commoditymarketvalue: !exists(json, "commoditymarketvalue")
      ? undefined
      : json["commoditymarketvalue"],
    futuremarketvalue: !exists(json, "futuremarketvalue")
      ? undefined
      : json["futuremarketvalue"],
    settledcash: !exists(json, "settledcash") ? undefined : json["settledcash"],
    exchangerate: !exists(json, "exchangerate")
      ? undefined
      : json["exchangerate"],
    sessionid: !exists(json, "sessionid") ? undefined : json["sessionid"],
    cashbalance: !exists(json, "cashbalance") ? undefined : json["cashbalance"],
    corporatebondsmarketvalue: !exists(json, "corporatebondsmarketvalue")
      ? undefined
      : json["corporatebondsmarketvalue"],
    warrantsmarketvalue: !exists(json, "warrantsmarketvalue")
      ? undefined
      : json["warrantsmarketvalue"],
    netliquidationvalue: !exists(json, "netliquidationvalue")
      ? undefined
      : json["netliquidationvalue"],
    interest: !exists(json, "interest") ? undefined : json["interest"],
    unrealizedpnl: !exists(json, "unrealizedpnl")
      ? undefined
      : json["unrealizedpnl"],
    stockmarketvalue: !exists(json, "stockmarketvalue")
      ? undefined
      : json["stockmarketvalue"],
    moneyfunds: !exists(json, "moneyfunds") ? undefined : json["moneyfunds"],
    currency: !exists(json, "currency") ? undefined : json["currency"],
    realizedpnl: !exists(json, "realizedpnl") ? undefined : json["realizedpnl"],
    funds: !exists(json, "funds") ? undefined : json["funds"],
    acctcode: !exists(json, "acctcode") ? undefined : json["acctcode"],
    issueroptionsmarketvalue: !exists(json, "issueroptionsmarketvalue")
      ? undefined
      : json["issueroptionsmarketvalue"],
    key: !exists(json, "key") ? undefined : json["key"],
    timestamp: !exists(json, "timestamp") ? undefined : json["timestamp"],
    severity: !exists(json, "severity") ? undefined : json["severity"],
  };
}

export function LedgerToJSON(value?: Ledger | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    commoditymarketvalue: value.commoditymarketvalue,
    futuremarketvalue: value.futuremarketvalue,
    settledcash: value.settledcash,
    exchangerate: value.exchangerate,
    sessionid: value.sessionid,
    cashbalance: value.cashbalance,
    corporatebondsmarketvalue: value.corporatebondsmarketvalue,
    warrantsmarketvalue: value.warrantsmarketvalue,
    netliquidationvalue: value.netliquidationvalue,
    interest: value.interest,
    unrealizedpnl: value.unrealizedpnl,
    stockmarketvalue: value.stockmarketvalue,
    moneyfunds: value.moneyfunds,
    currency: value.currency,
    realizedpnl: value.realizedpnl,
    funds: value.funds,
    acctcode: value.acctcode,
    issueroptionsmarketvalue: value.issueroptionsmarketvalue,
    key: value.key,
    timestamp: value.timestamp,
    severity: value.severity,
  };
}
