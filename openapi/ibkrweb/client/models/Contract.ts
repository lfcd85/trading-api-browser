// @ts-nocheck
/* eslint-disable */
/**
 * Client Portal Web API
 * Client Poral Web API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime'
import {
  ContractRules,
  ContractRulesFromJSON,
  ContractRulesFromJSONTyped,
  ContractRulesToJSON,
} from './'

/**
 * Contains all details of the contract, including rules you can use when placing orders
 * @export
 * @interface Contract
 */
export interface Contract {
  /**
   * true means you can trade outside RTH(regular trading hours)
   * @type {boolean}
   * @memberof Contract
   */
  rTH?: boolean
  /**
   * same as that in request
   * @type {string}
   * @memberof Contract
   */
  conId?: string
  /**
   * Contracts company name
   * @type {string}
   * @memberof Contract
   */
  companyName?: string
  /**
   *
   * @type {string}
   * @memberof Contract
   */
  exchange?: string
  /**
   * for exmple FB
   * @type {string}
   * @memberof Contract
   */
  localSymbol?: string
  /**
   * for example STK
   * @type {string}
   * @memberof Contract
   */
  instrumentType?: string
  /**
   *
   * @type {string}
   * @memberof Contract
   */
  currency?: string
  /**
   *
   * @type {string}
   * @memberof Contract
   */
  companyName?: string
  /**
   *
   * @type {string}
   * @memberof Contract
   */
  category?: string
  /**
   *
   * @type {string}
   * @memberof Contract
   */
  industry?: string
  /**
   *
   * @type {ContractRules}
   * @memberof Contract
   */
  rules?: ContractRules
}

export function ContractFromJSON(json: any): Contract {
  return ContractFromJSONTyped(json, false)
}

export function ContractFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): Contract {
  if (json === undefined || json === null) {
    return json
  }
  return {
    rTH: !exists(json, 'r_t_h') ? undefined : json['r_t_h'],
    conId: !exists(json, 'con_id') ? undefined : json['con_id'],
    companyName: !exists(json, 'company_name')
      ? undefined
      : json['company_name'],
    exchange: !exists(json, 'exchange') ? undefined : json['exchange'],
    localSymbol: !exists(json, 'local_symbol')
      ? undefined
      : json['local_symbol'],
    instrumentType: !exists(json, 'instrument_type')
      ? undefined
      : json['instrument_type'],
    currency: !exists(json, 'currency') ? undefined : json['currency'],
    companyName: !exists(json, 'companyName') ? undefined : json['companyName'],
    category: !exists(json, 'category') ? undefined : json['category'],
    industry: !exists(json, 'industry') ? undefined : json['industry'],
    rules: !exists(json, 'rules')
      ? undefined
      : ContractRulesFromJSON(json['rules']),
  }
}

export function ContractToJSON(value?: Contract | null): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    r_t_h: value.rTH,
    con_id: value.conId,
    company_name: value.companyName,
    exchange: value.exchange,
    local_symbol: value.localSymbol,
    instrument_type: value.instrumentType,
    currency: value.currency,
    companyName: value.companyName,
    category: value.category,
    industry: value.industry,
    rules: ContractRulesToJSON(value.rules),
  }
}
